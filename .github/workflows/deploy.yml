name: Deploy
env:
  DB_USER: ${{ secrets.DB_USER }}
  DB_PASS: ${{ secrets.DB_PASS }}
  DB_HOST: ${{ secrets.DB_HOST }}
  DB_NAME: ${{ secrets.DB_NAME }}
  DB_PORT: ${{ secrets.DB_PORT }}
on:
  workflow_call:
jobs:
  Deploy:
    # if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
    # if: github.event.action == 'closed' && github.event.pull_request.merged == true
    # if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4.1.1
      - name: setting-app-env
        run: |
          echo "APP_NAME=$(basename ${{ github.repository }})" >> $GITHUB_ENV
          echo $APP_NAME
      - name: Setup Java JDK
        uses: actions/setup-java@v3.13.0
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Build
        run: |
          mvn clean package
          cp target/*.jar ./
      # - name: Downloading the docker build image
      #   uses: actions/download-artifact@v2.1.1
      #   with:
      #     name: docker-img
      #     path: ./
      # - name: Download build artifact
      #   uses: actions/download-artifact@v2.1.1
      #   with:
      #     name: build
      #     path: .

      # - name: Caching docker build files
      #   uses: actions/cache@v3.3.2
      #   with:
      #     path: ./$APP_NAME.tar
      #     key: ${{ runner.os }}-${{ github.sha }}
      #     fail-on-cache-miss: true
      # - name: extracting docker artifact
      #   run: |
      #     docker load -i ./$APP_NAME.tar
      #     docker images
      - name: building docker images
        run: |
          ls -la
          docker build -t $APP_NAME:1.0.${{ github.run_number }} . 
          docker images
      - name: Push Docker GCR
        uses: RaccoonDev/push-docker-gcr@v1
        env:
          GCLOUD_SERVICE_KEY: ${{ secrets.GCLOUD_SERVICE_KEY }}
          GOOGLE_PROJECT_ID: ${{ vars.GOOGLE_PROJECT_ID }}
        with:
          image_name: ${{ env.APP_NAME }}
          image_tag: 1.0.${{ github.run_number }}
          
    # Update Manifest File
      - name: Checkout
        uses: actions/checkout@v4.1.1
        with:
          repository: 'super-info/k8s-manifest'
          token: ${{ secrets.GIT_TOKEN }}
      - name: Update image
        run: |
          echo $APP_NAME
          ls -la
          git config --global user.email "${{ secrets.GIT_MAIL }}"
          git config --global user.name "$GITHUB_REPOSITORY_OWNER"
          cd $APP_NAME
          sed -i "s|gcr.io/${{ vars.GOOGLE_PROJECT_ID }}.*|gcr.io/${{ vars.GOOGLE_PROJECT_ID }}/$APP_NAME:1.0.${{ github.run_number }}|g" deployment.yaml
          cat deployment.yaml
          git add .
          git commit -m "image updated"
          git push -uf origin
